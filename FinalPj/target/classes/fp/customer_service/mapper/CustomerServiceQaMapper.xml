<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fp.customer_service.mapper.CustomerServiceQaMapper">

	<!--
	<select id="qa_list" resultType="CustomerServiceQa">
	-->
		<!--select * from qa order by qa_num desc-->
		<!--
		select /*+ INDEX_DESC(qa QA_PK) */ * from qa where qa_num > 0
	</select>
	-->
	<select id="qa_content" resultType="CustomerServiceQa" parameterType="long">
		<!--select * from qa where qa_num = #{qa_num}-->
		<!--
		select qa_num, qa.mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, replyCnt, qa.option2, qa.option3, mem_name from qa, member where qa.mem_email=member.mem_email and qa_num=#{qa_num}
		-->
		<!--
		select qa_num, qa.mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, replyCnt, qa.option2, qa.option3, mem_name, class_num, cor_fname, free_fname from qa left outer join member on member.mem_email=qa.mem_email left outer join corporation on qa.mem_email=corporation.mem_email left outer join freelancer on qa.mem_email = freelancer.mem_email where qa_num=#{qa_num}
		-->
		<!--
		select qa_num, qa.mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, replyCnt, qa.option2, qa.option3, mem_name, class_num, cor_fname, cor_name, cor_type, free_fname, type_num, pro_exp from qa left outer join member on member.mem_email=qa.mem_email left outer join corporation on qa.mem_email=corporation.mem_email left outer join freelancer on qa.mem_email = freelancer.mem_email left outer join freelancer_profile on qa.mem_email = freelancer_profile.mem_email where qa_num=#{qa_num}
		-->
		select qa_num, qa.mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, replyCnt, qa.option2, qa.option3, mem_name, class_num, cor_fname, cor_name, cor_type, free_fname, freelancer_profile.type_num, type_name, pro_exp, pro_num, freelancer_profile.free_code, profile_choice from qa left outer join member on member.mem_email=qa.mem_email left outer join corporation on qa.mem_email=corporation.mem_email left outer join freelancer on qa.mem_email = freelancer.mem_email left outer join freelancer_profile on qa.mem_email = freelancer_profile.mem_email left outer join type on freelancer_profile.type_num=type.type_num where qa_num=#{qa_num}
	</select>
	
	<update id="qa_vcnt" parameterType="long">
		update qa set qa_vcnt = qa_vcnt + 1 where qa_num = #{qa_num}
	</update>
	
	<!--
	<insert id="notice_write" parameterType="CustomerServiceNotice">
		insert into notice values(NOTICE_NUM_SEQ.nextval, #{notice_sub}, #{notice_cont}, SYSDATE, 0, #{mem_email}, #{notice_cate}, 0, 0, 0, null)
	</insert>
	-->
	<insert id="qa_write" parameterType="CustomerServiceQa">
		<selectKey keyProperty="qa_num" order="BEFORE" resultType="long">
			select QA_NUM_SEQ.nextval from dual
		</selectKey>
			insert into qa values(#{qa_num}, #{mem_email}, #{qa_sub}, #{qa_cont}, SYSDATE, 0, 0, 0, 0, 0, #{qa_cate}, 0, 0, 0, null)
	</insert>
	
	<delete id="qa_delete" parameterType="long">
		delete from qa where qa_num = #{qa_num}
	</delete>
	
	<update id="qa_modify" parameterType="CustomerServiceQa">
		update qa set qa_cate=#{qa_cate}, qa_sub=#{qa_sub}, qa_cont=#{qa_cont} where qa_num = #{qa_num}
	</update>
	
	
	<!-- 총 게시글 개수 출력 -->
	<!--
	<select id="qa_count" resultType="int">
		select count(qa_num) from qa
	</select>
	-->
	<!-- sorting -->
	<select id="qa_cate_count_project" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='프로젝트'
	</select>
	<select id="qa_cate_count_freemarket" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='프리마켓'
	</select>
	<select id="qa_cate_count_freelancer" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='프리랜서'
	</select>
	<select id="qa_cate_count_sign" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='가입/탈퇴'
	</select>
	<select id="qa_cate_count_meminfo" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='회원정보'
	</select>
	<select id="qa_cate_count_payment" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='결제/환불'
	</select>
	<select id="qa_cate_count_discount" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='할인'
	</select>
	<select id="qa_cate_count_etc" resultType="int" parameterType="CustomerServiceQa">
		select count(qa_num) from qa where qa_cate='기타'
	</select>
		
	<!-- 페이징 처리 후 게시글 조회 -->
	<!--
	<select id="qa_list" resultType="CustomerServiceQa">
		<![CDATA[
		select * from (select rownum rn, a.* from (select /*+ INDEX_DESC(qa QA_PK) */ * from qa where qa_num > 0) a) where rn between #{start} and #{end}
		]]>
	</select>
	-->
	<!--
	<select id="qa_list" resultType="CustomerServiceQa">
		<![CDATA[
		select qa_num, mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_cate, qa_recommnum from (
		select /*+ INDEX_DESC(qa QA_PK) */ 
		rownum rn, qa_num, mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_cate, qa_recommnum from qa where rownum <= #{pageNum} * #{amount}) 
		where rn > (#{pageNum} - 1 ) * #{amount}
		]]>
	</select>
	-->
	
	<!--
	<select id="selectByWriter" resultType="Board" parameterType="BoardVo">
		<![CDATA[
		select * from (select ROWNUM rnum , aa.* from (select * from BOARD where writer like '%'||#{keyword}||'%' order by seq desc) aa) where rnum>#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	-->
<!--	
	<sql id="criteria">
		<trim prefix="and(" suffix=") " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type== 'T'.toString()">
							qa_sub like '%' || #{keyword}||'%'
						</when>
						<when test="type== 'C'.toString()">
							qa_cont like '%' || #{keyword}||'%'
						</when>
						<when test="type== 'W'.toString()">
							mem_email like '%' || #{keyword}||'%'
						</when>
						<when test="type== 'G'.toString()">
							qa_cate like '%' || #{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="qa_list" resultType="CustomerServiceQa">


		select * from (select rownum rno, a.* from qa a <include refid="criteria"></include>order by qa_num desc) where rno between (#{pageNum}-1)*#{amount}+1 and (#{pageNum})*#{amount}

	</select>

	<select id="qa_count" resultType="int">
		select count(qa_num) from qa  
		<include refid="criteria"></include>
	</select>
-->	
	
	
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							qa_sub like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							qa_cont like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							mem_name like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'E'.toString()">
							mem_email like '%'||#{keyword}||'%'
						</when>
						<when test="type== 'G'.toString()">
							qa_cate like '%' || #{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="qa_list" resultType="CustomerServiceQa">
	<!--
  <![CDATA[ 
  select 
    qa_num, mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, option1, option2, option3
  from 
      (
      select /*+INDEX_DESC(qa QA_PK) */
        rownum rn, qa_num, mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, option1, option2, option3 
      from 
        qa
      where 
  ]]>
  
  <include refid="criteria"></include>
      
  <![CDATA[    
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}   
  ]]>
  -->

  <![CDATA[
  select * from (select rownum rn, aa.* from (select qa_num, qa.mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, replycnt, qa.option2, qa.option3, mem_name from qa, member where qa.mem_email=member.mem_email order by qa_num desc) aa
      where
  ]]>

  <include refid="criteria"></include>
      
  <![CDATA[    
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}   
  ]]>
	</select>
	
	<!--
	<select id="qa_count" resultType="int">
		select count(*) from qa where 
		
		<include refid="criteria"></include> 
		
		qa_num > 0
		
	</select>
	-->
	<select id="qa_count" resultType="int">
		select count(*) from (select qa_num, qa.mem_email, qa_sub, qa_cont, qa_rdate, qa_vcnt, qa_prnum, qa_lev, qa_sun, qa_ox, qa_cate, qa_recommnum, replycnt, qa.option2, qa.option3, mem_name from qa, member where qa.mem_email=member.mem_email order by qa_num desc) where 
		
		<include refid="criteria"></include> 
		
		qa_num > 0
		
	</select>
	
	<update id="updateReplyCnt">
		update qa set replycnt = replycnt + #{amount} where qa_num = #{qa_num}
	</update>
	
	
	<!-- 문의글 좋아요 -->
	<select id="qa_recommend_list" resultType="Qa_recommend">
		select * from qa_recommend where mem_email=#{mem_email}	
	</select>
	
	<insert id="qa_recommend_insert" parameterType="map">
		insert into qa_recommend(qa_recommend_num, mem_email, qa_num) values(QA_RECOMMEND_NUM_SEQ.nextval, #{mem_email}, #{qa_num})
	</insert>
	
	<delete id="qa_recommend_del" parameterType="map">
		delete from qa_recommend where mem_email=#{mem_email} and qa_num=#{qa_num}
	</delete>
	
	<update id="qa_recommend_update_in" parameterType="map">
		update qa set qa_recommnum=qa_recommnum+1 where qa_num=#{qa_num}
	</update>
	
	<update id="qa_recommend_update_del" parameterType="map">
		update qa set qa_recommnum=qa_recommnum-1 where qa_num=#{qa_num}
	</update>
	
	
</mapper>