<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />
   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />
    <resources mapping="/js/**" location="/resources/js/" />
      <resources mapping="/css/**" location="/resources/css/" />
      <resources mapping="/images/**" location="/resources/images/" />
      <resources mapping="/fonts/**" location="/resources/fonts/" />
      <resources mapping="/plugins/**" location="/resources/plugins/" />
      <resources mapping="/video/**" location="/resources/video/" />
      <resources mapping="/sound/**" location="/resources/sound/" />
      <resources mapping="/summernote/**" location="/WEB-INF/views/summernote/" />
      <resources mapping="/hifiveImages/**" location="file:///C:/hifive/hifiveImages/" />
    
      <!-- for aws -->
      <!-- /for aws -->
   
   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   	<!--  jsonView -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="text/html;charset=UTF-8"/>
	</beans:bean>
    <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
      <beans:property name="order" value="0" />
	 </beans:bean>
   
   <!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
   <beans:bean id="naverLoginController" class="fp.login.api.NaverLoginController" />
   <beans:bean id="kakaoController" class="fp.login.api.KakaoController" />
  	<!-- file Upload 세영 -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <beans:property name="maxUploadSize" value="5242880" /> <!-- 5MB -->
        <!-- max size of file in memory (in bytes) -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </beans:bean>
    
   <!-- websocket handler -->
	<beans:bean id="echoHandler" class="fp.member.controller.EchoHandler" />
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo" />
		<websocket:handshake-interceptors>
	         <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
	      </websocket:handshake-interceptors>
	      
	      <websocket:sockjs/>
	 </websocket:handlers>
	
	<!-- 승훈 -->
	<context:component-scan base-package="fp.index.controller" />
	<context:component-scan base-package="fp.customer_service.controller" />
	
	<!-- 세영 -->
	<context:component-scan base-package="fp.market.controller" />
	<context:component-scan base-package="fp.freelancerprofile.FreelancerMarketInfoController" />

	<!-- 별 -->
	<context:component-scan base-package="fp.freelancerprofile.controller" />
	<context:component-scan base-package="fp.freelancerlist.controller" /> <!-- 0214추가 -->

	<!-- 나영 -->
	<context:component-scan base-package="fp.corporation.controller" />
	<!-- 소담 -->
	<context:component-scan base-package="fp.admin.controller" />
	<context:component-scan base-package="fp.member.controller" />
	<context:component-scan base-package="fp.login.controller" />
	<context:component-scan base-package="fp.login.api" />
</beans:beans>

