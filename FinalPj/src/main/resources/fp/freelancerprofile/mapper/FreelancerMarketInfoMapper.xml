<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  												
<mapper namespace="fp.freelancerprofile.mapper.FreelancerMarketInfoMapper">

	<resultMap type="MarketPick" id="resultMarketPick">
		<id property="marketP_num" column="marketP_num" />
			<result property="market_num" column="market_nump" />
			<result property="mem_email" column="mem_email" />
		<association property="market" javaType="Market" column ="market_num" >
			<result property="market_num" column="market_num" />
			<result property="free_code" column="free_code" />
			<result property="cate_num" column="cate_num" />
			<result property="market_price" column="market_price" />
			<result property="market_sub" column="market_sub" />
			<result property="market_cont" column="market_cont" />
			<result property="market_vcnt" column="market_vcnt" />
			<result property="market_fname" column="market_fname" />
			<result property="market_ofname" column="market_ofname" />
			<result property="market_state" column="market_state" />
			<result property="market_pcnt" column="market_pcnt" />
		</association>
			<association property="marketRev" javaType="MarketRev" column ="marketRev_num">
	       <id property="marketRev_num" column ="marketRev_num" />
	        <result property="marketRev_star" column ="marketRev_star" />
	       
    	</association>
	</resultMap>
	<resultMap type="Market" id="resultMyMarket">
		<id property="market_num" column="market_num" />
		<result property="free_code" column="free_code" />
		<result property="cate_num" column="cate_num" />
		<result property="market_price" column="market_price" />
		<result property="market_sub" column="market_sub" />
		<result property="market_cont" column="market_cont" />
		<result property="market_vcnt" column="market_vcnt" />
		<result property="market_fname" column="market_fname" />
		<result property="market_ofname" column="market_ofname" />
		<result property="market_state" column="market_state" />
		<result property="market_pcnt" column="market_pcnt" />
		<association property="freelancer" javaType="mFreelancer" column ="free_code" >
	       <id property="free_code" column ="free_code" />
	       <result property="mem_email" column ="mem_email" />  
		</association>
		<association property="marketRev" javaType="MarketRev" column ="marketRev_num">
	       <id property="marketRev_num" column ="marketRev_num" />
	        <result property="marketRev_star" column ="marketRev_star" />
	       
    	</association>
	</resultMap>
	<resultMap type="MarketBuysellList" id="resultMarketBuysellList">
		<id property="mbuysell_num" column="mbuysell_num" />
			<result property="market_num" column="market_num" />
			<result property="mem_email" column="mem_email" />
			<result property="mbuysell_state" column="mbuysell_state" />
			<result property="mbuysell_date" column="mbuysell_date" />
		<association property="market" javaType="Market" column ="market_num" >
			<result property="market_num" column="market_num" />
			<result property="free_code" column="free_code" />
			<result property="cate_num" column="cate_num" />
			<result property="market_price" column="market_price" />
			<result property="market_sub" column="market_sub" />
			<result property="market_vcnt" column="market_vcnt" />
			<result property="market_fname" column="market_fname" />
			<result property="market_state" column="market_state" />
			<result property="market_pcnt" column="market_pcnt" />
		</association>
		<association property="marketRev" javaType="MarketRev" column ="marketRev_num">
	       <id property="marketRev_num" column ="marketRev_num" />
	        <result property="marketRev_star" column ="marketRev_star" />
    	</association>
    	<association property="freelancer" javaType="Freelancer" column ="free_code" >
	       <id property="free_code" column ="free_code" />
	       <result property="mem_email" column ="mEmail" />
		</association>
	</resultMap>
	<resultMap type="MarketPayment" id="resultMarketPayment">
		<id property="marketPaym_num" column="marketPaym_num" />
			<result property="mem_email" column="mem_email" />
			<result property="mem_emailBuy" column="mem_emailBuy" />
			<result property="market_num" column="market_num" />
			<result property="marketPaym_feeRate" column="marketPaym_feeRate" />
			<result property="marketPaym_price" column="marketPaym_price" />
			<result property="marketPaym_feeRate" column="marketPaym_feeRate" />
			<result property="marketPaym_pdName" column="marketPaym_pdName" />
			<result property="marketPaym_rdate" column="marketPaym_rdate" />
		<association property="market" javaType="Market" column ="market_num" >
			<id property="market_num" column="market_num" />
			<result property="market_price" column="market_price" />
			<result property="market_sub" column="market_sub" />
			<result property="market_cont" column="market_cont" />
			<result property="market_vcnt" column="market_vcnt" />
			<result property="market_fname" column="market_fname" />
			<result property="market_ofname" column="market_ofname" />
			<result property="market_state" column="market_state" />
			<result property="market_pcnt" column="market_pcnt" />
		</association>
		<association property="marketRev" javaType="MarketRev" column ="marketRev_num">
	       <id property="marketRev_num" column ="marketRev_num" />
	         <result property="marketRev_star" column ="marketRev_star" />
	         <result property="market_num" column ="마켓넘" />
    	</association>
	</resultMap>
	
<!-- 찜한마켓리스트 -->
	<select id="getTotalMarketPick" parameterType="String" resultType="int">
		select count(*) from market_pick where mem_email=#{mem_email}
	</select>
	<select id="marketPickList" parameterType="hashmap" resultMap="resultMarketPick" >
	<![CDATA[
	
		select * from (select rownum rnum , aa.* from ( select * from 
			(select marketP_num,market_num market_nump,mem_email from market_pick where mem_email=#{mem_email})mp 
		left outer join
			(select market_price, market_fname ,market_state, market_sub, cate_num, m.market_num, market_pcnt, market_vcnt, count(MARKETREV_NUM) marketRev_num , avg(MARKETREV_STAR) marketRev_star from MARKET_REVIEW mr 
        right outer join MARKET m on m.MARKET_NUM=mr.MARKET_NUM  group by m.MARKET_NUM,market_fname,market_sub,market_price,market_state,cate_num,market_pcnt,market_vcnt) m 
		on mp.market_nump = m.market_num order by m.market_num desc ) aa )where rnum>#{start} and rnum<=#{end} 
		
	]]>
	<!--
		select * from (select rownum rnum , aa.* from ( select * from 
			(select marketP_num,market_num market_nump,mem_email from market_pick where mem_email=#{mem_email})mp 
		left outer join
			(select market_price, market_fname ,market_state, market_sub, cate_num, market_num, market_pcnt, market_vcnt from market) m 
		on mp.market_nump = m.market_num order by m.market_num desc ) aa )where rnum>#{start} and rnum<=#{end} 
		-->
<!-- select * from (select rownum rnum , aa.* from (select * from market_pick where mem_email=#{mem_email} order by marketp_num desc ) aa )where rnum>#{start} and rnum<=#{end} -->
	</select>
<!-- 마켓찜삭제 -->	
	<delete id="deleteMarketPick" parameterType="hashmap">
		delete market_pick where marketp_num=#{marketP_num} and mem_email=#{mem_email}
	</delete>
<!-- 판매한마켓리스트 -->
	<select id="getTotalPaymentDetails" parameterType="String" resultType="int">
		select count(*) from market_payment where mem_email=#{mem_email}
	</select>
	<select id="paymentDetails" parameterType="hashmap" resultMap="resultMarketPayment">
	<!-- <![CDATA[	
		select * from (select rownum rnum , aa.* from 	
		(select * from market_payment where mem_email=#{mem_email}
		order by MARKETPAYM_NUM desc ) aa )where rnum>#{start} and rnum<=#{end} 
		]]>
	 -->	
	 <![CDATA[	
			select * from (select ROWNUM rnum , aa.* from (select A.*, B.marketRev_num, B.marketRev_star  from
				(select mem_emailBuy,marketPaym_num,MARKETPAYM_FEERATE, MARKETPAYM_PRICE, m.market_num, m.market_sub, m.market_vcnt, m.market_pcnt, m.market_fname,marketPaym_rdate from MARKET_PAYMENT mp join MARKET m on m.market_num=mp.market_num where mp.mem_email=#{mem_email} ) A
			left outer join
				(select m.MARKET_NUM, count(MARKETREV_NUM) marketRev_num , avg(MARKETREV_STAR) marketRev_star from MARKET_REVIEW mr right outer join MARKET m on m.MARKET_NUM=mr.MARKET_NUM group by m.MARKET_NUM) B
				on A.MARKET_NUM=B.MARKET_NUM 
				ORDER BY A.marketPaym_num desc ) aa)
			where rnum>#{start} and rnum<=#{end}	
		]]>
	</select>
	<select id="paymentDetailsGetBuyerName" parameterType="String" resultType="hashmap">
		select mem_name name, mem_email email from member where mem_email=#{email}
	</select>
<!-- 마켓취소 -->
	<delete id="deleteMarketPayment" parameterType="long">
		delete market_payment where marketpaym_num=#{marketPaym_num}	
	</delete>
<!-- 내가등록한마켓리스트-->	
	<select id="getTotalMyMarket" parameterType="String" resultType="int">
		select count(*) from market m join freelancer f on m.free_code=f.free_code where mem_email=#{mem_email}
	</select>
	<select id="getMyMarket" parameterType="hashmap" resultMap="resultMyMarket">
	<![CDATA[	
		
        select * from (select ROWNUM rnum , aa.* from (select A.*, B.marketRev_num, B.marketRev_star  from
			    (select m.MARKET_NUM,f.FREE_CODE,m.MARKET_PRICE,m.MARKET_SUB,m.MARKET_VCNT,m.MARKET_FNAME,m.MARKET_PCNT,m.MARKET_STATE,f.MEM_EMAIL 
			    from market m join freelancer f 
			    on f.free_code=m.free_code where f.mem_email=#{mem_email}) A
			left outer join
			    (select m.MARKET_NUM, count(MARKETREV_NUM) marketRev_num , avg(MARKETREV_STAR) marketRev_star from MARKET_REVIEW mr right outer join MARKET m on m.MARKET_NUM=mr.MARKET_NUM group by m.MARKET_NUM) B
			    on A.MARKET_NUM=B.MARKET_NUM 
			    ORDER BY A.MARKET_NUM desc ) aa)
			where rnum>#{start} and rnum<=#{end}
	]]>
	<!--  select * from (select rownum rnum , aa.* from 
		( select m.MARKET_NUM,f.FREE_CODE,m.MARKET_PRICE,m.MARKET_SUB,m.MARKET_VCNT,m.MARKET_FNAME,m.MARKET_PCNT,m.MARKET_STATE,f.MEM_EMAIL, avg(MARKETREV_STAR) marketRev_star,mr.MARKET_NUM 마켓넘
		from market m 
        join freelancer f on f.free_code=m.free_code  
        left outer join MARKET_REVIEW mr on mr.MARKET_NUM =m.MARKET_NUM
		where f.mem_email=#{mem_email} group by(m.MARKET_NUM,f.FREE_CODE,m.MARKET_PRICE,m.MARKET_SUB,m.MARKET_VCNT,m.MARKET_FNAME,m.MARKET_PCNT,m.MARKET_STATE,f.MEM_EMAIL,mr.MARKET_NUM)
        order by m.market_num desc ) aa )where rnum>#{start} and rnum<=#{end}
    -->    
	</select>
<!-- 프로필사진띄우는쿼리 -->	
	<select id="getFreefname" parameterType="String" resultType="Freelancer">
		select free_fname from freelancer where mem_email=#{mem_email}
	</select>
	
<!-- 내가구매한마켓리스트 -->
	<select id="getTotalBuyMarket" parameterType="String" resultType="int">
		select count(*) from market_buyselllist where mem_email=#{mem_email}
	</select>
	<select id="myBuyMarket" parameterType="hashmap" resultMap="resultMarketBuysellList">
	<![CDATA[	
              select * from (select rownum rnum , aa.* from 
                (select * from
                   (select *from market_buyselllist)mb 
                   left outer join
                    (select f.mem_email mEmail,m.MARKET_NUM ,market_fname, m.market_sub, m.market_price, m.market_vcnt, market_pcnt, count(MARKETREV_NUM) marketRev_num , avg(MARKETREV_STAR) marketRev_star from MARKET_REVIEW mr 
                    right outer join MARKET m on m.MARKET_NUM=mr.MARKET_NUM 
                    join FREELANCER f on f.free_code=m.free_code
                    group by m.MARKET_NUM,market_fname,market_sub,market_price, f.mem_email,market_vcnt,market_pcnt) m on mb.market_num=m.market_num where mb.mem_email=#{mem_email}
                order by m.market_num desc 
                 ) aa 
            )where rnum>#{start} and rnum<=#{end}
             
            
	]]>
	<!--	select * from (select rownum rnum , aa.* from 
		(select * from(select *from market_buyselllist)mb left outer join
		(select market_price,market_sub,market_num,market_fname from market)m on mb.market_num=m.market_num where mem_email=#{mem_email}
		order by m.market_num desc ) aa )where rnum>#{start} and rnum<=#{end} 
	-->	
	</select>	
<!-- 거절당한마켓 수정하기 -->	
	<select id="updateRefusalMarket1" resultType="Market" parameterType="long">
		select * from market where MARKET_NUM=#{market_num}	
	</select>
	<update id="updateRefusalMarket2"  parameterType="Market">
		UPDATE MARKET SET MARKET_PRICE=#{market_price},MARKET_SUB=#{market_sub},MARKET_CONT=#{market_cont},MARKET_FNAME= #{market_fname},MARKET_OFNAME=#{market_ofname},MARKET_STATE=0 WHERE MARKET_NUM = #{market_num}
	</update>
	
</mapper>